# General
# Each server within a cluster needs a unique name. Set to UUID to have deepstream autogenerate a unique id
serverName: UUID
# Show the deepstream logo on startup (highly recommended)
showLogo: true
# Log messages with this level and above. Valid levels are DEBUG, INFO, WARN, ERROR, OFF
logLevel: INFO
# Directory where all plugins reside
#libDir: ../lib

# Connectivity
# port for the websocket server
port: 6020
# host for the websocket server
host: 0.0.0.0
# url path websocket connections connect to
urlPath: /deepstream
# url path for http health-checks, GET requests to this path will return 200 if deepstream is alive
healthCheckPath: /health-check
# webfacing URL under which this client is reachable. Used for loadbalancing / failover
externalUrl: null
# the time to wait for a buffer to fill before sending it out
timeBetweenSendingQueuedPackages: 1
# the amount of messages that should fit into a buffer before sending between the time to fill
maxMessagesPerPacket: 1000
# the amount of milliseconds between each heartbeat
heartbeatInterval: 30000

# SSL Configuration
sslKey: null
sslCert: null
sslCa: null

# Logger Configuration
# logger:
#   # use either the default logger
#   name: default
#    options:
#      colors: true
#      # value of logLevel (line 4) will always overwrite this value
#      logLevel: INFO

#   # or the winston logger
#   name: winston
#   options:
#     # specify a list of transports (console, file, time)
#     -
#       type: console
#       options:
#         # value of logLevel (line 4) will always overwrite this value
#         level: info
#         colorize: true
#     -
#       type: time
#       options:
#         filename: ../var/deepstream

#   # or a custom logger
#   path: ./my-custom-logger

# Plugin Configuration
plugins:
  # message:
  #   name: redis
  #   options:
  #     host: localhost
  #     port: 6379
  #
  # cache:
  #   name: memcached
  #   options:
  #     serverLocation: 'localhost:11211'
  #
  # storage:
  #   name: rethinkdb
  #   options:
  #     host: localhost
  #     port: 28015

# Storage options
# a RegExp that matches recordNames. If it matches, the record's data won't be stored in the db
storageExclusion: null

# Security
# amount of time a connection can remain open while not being logged in
unauthenticatedClientTimeout: 180000
# invalid login attempts before the connection is cut
maxAuthAttempts: 3
# if true, the logs will contain the cleartext username / password of invalid login attempts
logInvalidAuthData: true
# maximum allowed size of an individual message in bytes
maxMessageSize: 1048576

#Authentication
auth:
  type: none

#   # reading users and passwords from a file
#   type: file
#   options:
#     # Path to the user file. Can be json, js or yml
#     path: ./users.yml
#     # the name of a HMAC digest algorithm
#     hash: 'md5'
#     # the number of times the algorithm should be applied
#     iterations: 100
#     # the length of the resulting key
#     keyLength: 32

#   # getting permissions from a http webhook
#   type: http
#   options:
#     # a post request will be send to this url on every incoming connection
#     endpointUrl: https://someurl.com/validateLogin
#     # any of these will be treated as access granted
#     permittedStatusCodes: [ 200 ]
#     # if the webhook didn't respond after this amount of milliseconds, the connection will be rejected
#     requestTimeout: 2000

# Permissioning
permission:
  # Only config or custom permissionHandler at the moment
  type: config
  options:
    # Path to the permissionFile. Can be json, js or yml
    path: ./permissions.yml
    # Amount of times nested cross-references will be loaded. Avoids endless loops
    maxRuleIterations: 3
    # PermissionResults are cached to increase performance. Lower number means more loading
    cacheEvacuationInterval: 60000

# Timeouts (in milliseconds)
# Timeout for client RPC acknownledgement
rpcAckTimeout: 1000
# Timeout for actual RPC provider response
rpcTimeout: 10000
# Maximum time permitted to fetch from cache
cacheRetrievalTimeout: 1000
# Maximum time permitted to fetch from storage
storageRetrievalTimeout: 2000
# Plugin startup timeout â€“ deepstream init will fail if any plugins fail to emit a 'done' event within this timeout
dependencyInitialisationTimeout: 2000
# The interval at which a status message is sent by each node within a cluster
clusterKeepAliveInterval: 5000
# The interval at which all nodes within a cluster registry are checked for timeouts
clusterActiveCheckInterval: 1000
# The longest duration since the last status message was received until the remote node is declared inactive
clusterNodeInactiveTimeout: 6000
# The amount of time to wait for a provider to acknowledge or reject a listen request
listenResponseTimeout: 500
# The amount of time a lock can be reserved for before it is force released
lockTimeout: 1000
# The amount of time a lock request waits for before it defaults to false
lockRequestTimeout: 1000
# The amount of time a broadcast will wait (to allow broadcast coalescing). -1 means disabled.
broadcastTimeout: 0
